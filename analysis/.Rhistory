fn <- build_filenames(data_path,samples)
library(wigglescout)
library(ggplot2)
library(reshape2)
library(dplyr)
library(ggpubr)
library(GenomicRanges)
source('../lib/lib_embed_data.v1.0.R')
data_path <- '/Volumes/DATA/DATA/GLOE/GLOE/replicates/'
atac_path <- '/Volumes/DATA/DATA/GLOE/ATAC/'
replicates <- c("WT-UT-1-1","WT-UT-1-2","WT-UT-1-3","WT-20-2-1","WT-20-2-2","WT-20-2-3","WT-24hr-3-1","WT-24hr-3-2","WT-24hr-3-3","KO-UT-4-1","KO-UT-4-2","KO-UT-4-3","KO-20-5-1","KO-20-5-2","KO-20-5-3","KO-24hr-6-1","KO-24hr-6-2","KO-24hr-6-3")
samples <- c("WT-UT-1","WT-20-2","WT-24hr-3","KO-UT-4","KO-20-5","KO-24hr-6")
build_filenames <- function(path, cond) {
files <- paste0(path,"/GL-",cond,".hg19.bs50.bw")
labels <- paste0("GLOE ", cond)
return(data.frame(files=files,labels=labels))
}
build_filenames_plus <- function(path, cond) {
files <- paste0(path,"/GL-",cond,".hg19.R1plus.bw")
labels <- paste0("GLOE (+) ", cond)
return(data.frame(files=files,labels=labels))
}
build_filenames_minus <- function(path, cond) {
files <- paste0(path,"//GL-",cond,".hg19.R1minus.bw")
labels <- paste0("GLOE (-) ", cond)
return(data.frame(files=files,labels=labels))
}
library(ggplot2)
library(reshape2)
library(dplyr)
library(ggpubr)
source('../lib/lib_embed_data.v1.0.R')
df <- read.delim("../data/read_fraction_under_pileup/pile_up3_fraction.txt")
View(df)
df <- read.delim("../data/read_fraction_under_pileup/pile_up3_fraction.txt",header = F)
colnamres(df) <- c("condition","total","fltd","pileup")
colnames(df) <- c("condition","total","fltd","pileup")
df <- read.delim("../data/read_fraction_under_pileup/pile_up3_fraction.txt",header = F)
colnames(df) <- c("condition","total","fltd","pileup")
View(df)
df$frac <- df$pileup/df$fltd * 100
ggbarplot(df,x = "condition", y="frac")
ggbarplot(df,x = "condition", y="frac", add = "mean_se")
ggbarplot(df,x = "condition", y="frac", c("mean_se", "jitter"))
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "jitter"))
?wigglescout
?elsasserlib
??elsasserlibâ€™
library(elsasserlib)
?elsasserlib
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "jitter")) + theme_elsasserlab_print()
df <- read.delim("../data/read_fraction_under_pileup/pile_up3_fraction.txt",header = F)
colnames(df) <- c("condition","total","fltd","pileup")
df$frac <- df$pileup/df$fltd * 100
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "jitter")) + theme_elsasserlab_print()
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "jitter")) + theme_elsasserlab_print()
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "jitter")) + theme_elsasserlab_print()
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "jitter")) + theme_elsasserlab_print()
ggbarplot(df,x = "condition", y="frac", color = palette_categorical(6), add=c("mean_se", "jitter")) + theme_elsasserlab_print()
palette_categorical(6)
palette_categorical(4)
ggbarplot(df,x = "condition", y="frac", color = palette_categorical[1:6], add=c("mean_se", "jitter")) + theme_elsasserlab_print()
ggbarplot(df,x = "condition", y="frac", color = palette_categorical()[1:6], add=c("mean_se", "jitter")) + theme_elsasserlab_print()
ggbarplot(df,x = "condition", y="frac", color = palette_categorical(12)[1:6], add=c("mean_se", "jitter")) + theme_elsasserlab_print()
palette_categorical(12)[1:6]
ggbarplot(df,x = "condition", y="frac", color = palette_categorical(12)[1:6], add=c("mean_se", "jitter")) + theme_elsasserlab_print()
ggbarplot(df,x = "condition", y="frac",  add=c("mean_se", "jitter")) + theme_elsasserlab_print()
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "dotplot")) + theme_elsasserlab_print()
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "jitter")) + theme_elsasserlab_print()
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "jitter")) + theme_elsasserlab_print() + stat_compare_means()
comp <- list(c("WT UT","WT 24hr"), c("WT 24hr", "KO 24hr"))
embed_last_plot("frac_under_pile")
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "jitter")) + theme_elsasserlab_print() + stat_compare_means(comparisons = comp)
compare_means(frac ~ condition,  data = df)
compare_means(frac ~ condition,  data = df,method = "t.test")
df <- read.delim("../data/read_fraction_under_pileup/pile_up3_fraction.txt",header = F)
colnames(df) <- c("condition","total","fltd","pileup")
df$frac <- df$pileup/df$fltd * 100
comp <- list(c("WT UT","WT 24hr"), c("WT 24hr", "KO 24hr"))
compare_means(frac ~ condition,  data = df,method = "t.test")
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "jitter")) + theme_elsasserlab_print())
df <- read.delim("../data/read_fraction_under_pileup/pile_up3_fraction.txt",header = F)
colnames(df) <- c("condition","total","fltd","pileup")
df$frac <- df$pileup/df$fltd * 100
comp <- list(c("WT UT","WT 24hr"), c("WT 24hr", "KO 24hr"))
compare_means(frac ~ condition,  data = df,method = "t.test")
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "jitter")) + theme_elsasserlab_print()
embed_last_plot("frac_under_pile")
df <- read.delim("../data/read_fraction_under_pileup/pile_up3_fraction.txt",header = F)
colnames(df) <- c("condition","total","fltd","pileup")
df$frac <- df$pileup/df$fltd * 100
comp <- list(c("WT UT","WT 24hr"), c("WT 24hr", "KO 24hr"))
compare_means(frac ~ condition,  data = df,method = "t.test")
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "jitter")) + theme_elsasserlab_print()
embed_last_plot("frac_under_pile")
compare_means(frac ~ condition,  data = df,method = "t.test",paired = F)
fn <- build_filenames(data_path,samples)
p1 <- plot_bw_profile(bwfiles = fn$files,labels = fn$labels,mode = "center",upstream = 1000, downstream = 1000, loci = "../data/pileup/GL-WT-24hr-3.pile_up3_s10_u.uniq.bed", bin_size = 10, verbose = F) + scale_y_continuous(limits=c(0,45))
ggbarplot(df,x = "condition", y="frac", add=c("mean_se", "jitter")) + theme_elsasserlab_print()
embed_last_plot("frac_under_pile")
compare_means(frac ~ condition, p.adjust.method = "none", data = df,method = "t.test",paired = F)
compare_means(frac ~ condition, p.adjust.method = "none", data = df,method = "wilcox.test",paired = F)
fn <- build_filenames(data_path,samples)
